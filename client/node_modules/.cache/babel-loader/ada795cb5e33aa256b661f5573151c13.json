{"ast":null,"code":"var _jsxFileName = \"/home/mohamad/Downloads/the_odin_project/code/recepe-web-app/client/src/components/screens/ResetPasswordScreen.js\",\n    _s = $RefreshSig$();\n\nimport './ResetPasswordScreen.css';\nimport { useState } from 'react';\nimport { Link } from \"react-router-dom\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ResetPasswordScreen = ({\n  match\n}) => {\n  _s();\n\n  const [password, setPassword] = useState(\"\");\n  const [confirmpassword, setConfirmpassword] = useState(\"\");\n  const [error, setError] = useState(\"\");\n  const [success, setSuccess] = useState(\"\");\n\n  const resetPasswordHandler = async e => {\n    e.preventDefault();\n    const config = {\n      header: {\n        \"Content-Type\": \"application/json\"\n      }\n    };\n\n    if (password !== confirmpassword) {\n      setPassword(\"\");\n      setConfirmpassword(\"\");\n      setTimeout(() => {\n        setError(\"\");\n      }, 5000);\n      return setError(\"Passwords don't match\");\n    }\n\n    try {\n      const {\n        data\n      } = await axios.put(`/api/auth/resetpassword/${match.params.resetToken}`, {\n        password\n      }, config);\n      setSuccess(data.data);\n    } catch (error) {\n      setError(error.response.data.error);\n      setTimeout(() => {\n        setError(\"\");\n      }, 5000);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"resetpassword-screen\",\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: resetPasswordHandler,\n      className: \"resetpassword-screen_form\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"resetpassword-screen_title\",\n        children: \"Reset Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this), error && /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"error-message\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 18\n      }, this), success && /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"success-message\",\n        children: [success, /*#__PURE__*/_jsxDEV(Link, {\n          to: \"/login\",\n          children: \"Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 64\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"password\",\n          children: \"New Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          required: true,\n          id: \"password\",\n          placeholder: \"Enter new password\",\n          value: password,\n          onChange: e => setPassword(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"confirmpassword\",\n          children: \"Confirm New Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          required: true,\n          id: \"confirmpassword\",\n          placeholder: \"Confirm new password\",\n          value: confirmpassword,\n          onChange: e => setConfirmpassword(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"btn btn-primary\",\n        children: \"Reset Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ResetPasswordScreen, \"IrfEn6k5Xdpz8QCnj5UXaiuwlsg=\");\n\n_c = ResetPasswordScreen;\nexport default ResetPasswordScreen;\n\nvar _c;\n\n$RefreshReg$(_c, \"ResetPasswordScreen\");","map":{"version":3,"sources":["/home/mohamad/Downloads/the_odin_project/code/recepe-web-app/client/src/components/screens/ResetPasswordScreen.js"],"names":["useState","Link","axios","ResetPasswordScreen","match","password","setPassword","confirmpassword","setConfirmpassword","error","setError","success","setSuccess","resetPasswordHandler","e","preventDefault","config","header","setTimeout","data","put","params","resetToken","response","target","value"],"mappings":"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","sourcesContent":["import './ResetPasswordScreen.css'\nimport{useState} from 'react'\nimport{Link} from \"react-router-dom\"\nimport axios from \"axios\"\n\nconst ResetPasswordScreen = ({match}) => {\n  const [password,setPassword]=useState(\"\")\n  const [confirmpassword,setConfirmpassword]=useState(\"\")\n  const[error,setError]=useState(\"\")\n  const[success,setSuccess]=useState(\"\");\n\n  const resetPasswordHandler = async (e)=>{\n  e.preventDefault()\n\n  const config ={\n    header:{\n      \"Content-Type\":\"application/json\",\n    },\n  }\n\n  if(password!==confirmpassword){\n    setPassword(\"\")\n    setConfirmpassword(\"\")\n    setTimeout(()=>{\n      setError(\"\")\n    },5000)\n    return setError(\"Passwords don't match\")\n  }\n  try{\n    const {data} = await axios.put(`/api/auth/resetpassword/${match.params.resetToken}`,{password,},config)\n\n    setSuccess(data.data)\n  }catch(error){\n    setError(error.response.data.error)\n    setTimeout(()=>{\n      setError(\"\")\n    },5000)\n  }\n\n  }\n\n  return (\n    <div className=\"resetpassword-screen\">\n      <form onSubmit={resetPasswordHandler} className=\"resetpassword-screen_form\">\n        <h3 className=\"resetpassword-screen_title\">Reset Password</h3>\n        {error &&<span className=\"error-message\">{error}</span>}\n        {success && <span className=\"success-message\">{success}<Link to=\"/login\">Login</Link></span>}\n        <div className=\"form-group\">\n          <label htmlFor=\"password\">New Password</label>\n          <input type=\"password\" required id=\"password\" placeholder=\"Enter new password\" value={password} onChange={(e)=>setPassword(e.target.value)}/>\n        </div>\n\n        <div className=\"form-group\">\n          <label htmlFor=\"confirmpassword\">Confirm New Password</label>\n          <input type=\"password\" required id=\"confirmpassword\" placeholder=\"Confirm new password\" value={confirmpassword} onChange={(e)=>setConfirmpassword(e.target.value)}/>\n        </div>\n\n        <button type=\"submit\" className=\"btn btn-primary\">Reset Password</button>\n      </form>\n    </div>\n  )\n}\n\nexport default ResetPasswordScreen\n"]},"metadata":{},"sourceType":"module"}